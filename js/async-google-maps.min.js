/******************************************************
*                                                     *
*   Async Google Maps - jQuery Plugin                 *
*                                                     *
*   Purpose: This project contains a simple and       *
*            full configurable jQuery plugin which    *
*            asynchronously loads one or multiple     *
*            Google Maps instances located on a       *
*            page. The load is triggered when the     *
*            map is scrolled into viewport.           *
*                                                     *
*   Author: Andreas Kar (thex) <andreas.kar@gmx.at>   *
*   Repository: https://git.io/JvD8G                  *
*                                                     *
******************************************************/

!function(r){r.fn.asyncGoogleMaps=function(n){var e=r.extend(!0,{},r.fn.asyncGoogleMaps.defaults,n);e.containers=this,e.attachSpinner(e),e.triggerAsyncLoad(e),e.checkAndLoad(e)},r.fn.asyncGoogleMaps.defaults={offset:0,spinner:{attach:!1,remove:!1,type:"included",spinnerClass:"async-gmaps-spinner",bsSpinnerClass:"spinner-border",customSpinner:"",delay:1e4},isInViewport:function(n){var e=r(this).offset().top,s=e+r(this).outerHeight(),t=r(window).scrollTop(),a=t+r(window).height();return t<s&&e+n.offset<a},removeSpinner:function(n){setTimeout(function(){r(this).parent().find("."+n.spinner.spinnerClass).remove()}.bind(this),n.spinner.delay)},attachSpinner:function(n){var e,s=n.spinner;s.attach&&r(n.containers).each(function(){"bootstrap"==s.type?(e=r("<div>").addClass(s.bsSpinnerClass+" "+s.spinnerClass).attr("role","status")).prepend(r("<span>").addClass("sr-only").html("Loading...")):"included"==s.type?e=r("<div>").addClass("simple-spinner "+s.spinnerClass).attr("role","status"):"custom"==s.type&&(e=r(s.customSpinner).addClass(s.spinnerClass)),r(this).parent().prepend(e)})},triggerAsyncLoad:function(n){r(window).on("resize scroll",function(){n.checkAndLoad(n)})},checkAndLoad:function(n){var e;r((e=n).containers).each(function(){var n=r(this);!n.attr("src")&&n.attr("data-src")&&e.isInViewport.call(n,e)&&(e.beforeLoad.call(n,e),n.attr("src",n.attr("data-src")),e.spinner.remove&&e.removeSpinner.call(n,e),e.afterLoad.call(n,e))})},beforeLoad:function(n){},afterLoad:function(n){}}}(jQuery);