/******************************************************
*                                                     *
*   Async Google Maps - jQuery Plugin                 *
*                                                     *
*   Purpose: This project contains a simple and       *
*            full configurable jQuery plugin which    *
*            asynchronously loads one or multiple     *
*            Google Maps instances located on a       *
*            page. The load is triggered when the     *
*            map is scrolled into viewport.           *
*                                                     *
*   Author: Andreas Kar (thex) <andreas.kar@gmx.at>   *
*   Repository: https://git.io/JvD8G                  *
*                                                     *
******************************************************/

!function(i){i.fn.asyncGoogleMaps=function(n){var e=i.extend(!0,{},i.fn.asyncGoogleMaps.defaults,n);e.containers=this,e.setHeight(e),e.attachSpinner(e),e.triggerAsyncLoad(e),e.checkAndLoad(e)},i.fn.asyncGoogleMaps.defaults={offset:0,fixHeight:!1,spinner:{attach:!1,remove:!1,type:"included",spinnerClass:"async-gmaps-spinner",bsSpinnerClass:"spinner-border",customSpinner:"",delay:1e4},isInViewport:function(n){var e=i(this).offset().top,t=e+i(this).outerHeight(),s=i(window).scrollTop(),a=s+i(window).height();return s<t&&e+n.offset<a},setHeight:function(n){n.fixHeight&&i(n.containers).each(function(){var n=i(this).attr("height");void 0!==n&&i(this).attr("style","min-height:"+n+"px;")})},removeSpinner:function(n){setTimeout(function(){i(this).parent().find("."+n.spinner.spinnerClass).remove()}.bind(this),n.spinner.delay)},attachSpinner:function(n){var e,t=n.spinner;t.attach&&i(n.containers).each(function(){"bootstrap"==t.type?(e=i("<div>").addClass(t.bsSpinnerClass+" "+t.spinnerClass).attr("role","status")).prepend(i("<span>").addClass("sr-only").html("Loading...")):"included"==t.type?e=i("<div>").addClass("simple-spinner "+t.spinnerClass).attr("role","status"):"custom"==t.type&&(e=i(t.customSpinner).addClass(t.spinnerClass)),i(this).parent().prepend(e)})},triggerAsyncLoad:function(n){i(window).on("resize scroll",function(){n.checkAndLoad(n)})},checkAndLoad:function(n){var e;i((e=n).containers).each(function(){var n=i(this);!n.attr("src")&&n.attr("data-src")&&e.isInViewport.call(n,e)&&(e.beforeLoad.call(n,e),n.attr("src",n.attr("data-src")),e.spinner.remove&&e.removeSpinner.call(n,e),e.afterLoad.call(n,e))})},beforeLoad:function(n){},afterLoad:function(n){}}}(jQuery);